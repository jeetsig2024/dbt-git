
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'dbt_practise'
version: '1.0.0'

# This setting configures which "profile" dbt uses for this project.
profile: 'dbt_practise'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"

on-run-end:
  - 'grant usage on warehouse COMPUTE_WH to role ANALYST'
  - 'grant usage on database JEET_DB to role ANALYST'
  - 'grant select on all tables in schema JEET_DB_SCHEMA to role ANALYST'
  # - 'grant select on all views in schema compute_wh.jeet_db.jeet_db_schema to role jeet'
  # - 'grant usage on database compute_wh.snowflake_sample_data to role jeet'


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/
# directory as views. These settings can be overridden in the individual model
# files using the `{{ config(...) }}` macro.
models:
  dbt_practise:
    # Config indicated by + and applies to all files under models/example/
    example:
      +materialized: view
      vars:
        my_first_variable: True
        my_second_variable: 2020
        my_third_variable: 1
    
    elementary:
      schema: elementary
      # post-hook: 'grant usage on {{this}} to role ANALYST'
      # post-hook: 'grant select on {{target.this}} to role ANALYST'


